<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Custom SQL Query (nba)' inline='true' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='127.0.0.1' name='mysql.0ete8t30n0vphu1c8ma5j16s2ggl'>
            <connection class='mysql' dbname='nba' odbc-native-protocol='' one-time-sql='' port='3306' server='127.0.0.1' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query' type='text'>SELECT &#13;
    g.season,&#13;
    t.team_name,&#13;
    g.playoffs AS game_type,&#13;
    ROUND(AVG(s.score_home - s.score_away), 2) AS avg_scoring_margin&#13;
FROM Games g&#13;
JOIN Scores s ON g.game_id = s.game_id&#13;
JOIN Teams t ON t.team_sym IN (s.team_sym_home, s.team_sym_away)&#13;
GROUP BY g.season, g.playoffs, t.team_name&#13;
ORDER BY g.season, g.playoffs, avg_scoring_margin DESC</relation>
          <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query1' type='text'><![CDATA[SELECT  g.season,
    COUNT(CASE 
            WHEN (br.id_spread = 0 AND bl.whos_favored = 'home' AND s.score_home << s.score_away) OR
                 (br.id_spread = 0 AND bl.whos_favored = 'away' AND s.score_away << s.score_home)
         THEN 1 
         END) AS failed_to_cover,
    COUNT(*) AS total_games,
    ROUND((COUNT(CASE 
            WHEN (br.id_spread = 0 AND bl.whos_favored = 'home' AND s.score_home << s.score_away) OR
                 (br.id_spread = 0 AND bl.whos_favored = 'away' AND s.score_away << s.score_home)
         THEN 1 
         END) / COUNT(*)) * 100, 2) AS percentage_favorite_failed
FROM BettingResults br
JOIN BettingLines bl ON br.game_id = bl.game_id
JOIN Games g ON bl.game_id = g.game_id
JOIN Scores s ON s.game_id = g.game_id
WHERE g.regular = 'TRUE'
GROUP BY g.season
ORDER BY g.season]]></relation>
          <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query2' type='text'>SELECT &#13;
    g.season,&#13;
    t.team_name,&#13;
    COUNT(CASE WHEN sr.H2_spread = 1 AND br.id_spread = 0 THEN 1 END) AS underdog_covered_H2_not_full,&#13;
    COUNT(*) AS total_games,&#13;
    ROUND((COUNT(CASE WHEN sr.H2_spread = 1 AND br.id_spread = 0 THEN 1 END) / COUNT(*)) * 100, 2) AS percentage&#13;
FROM Games g&#13;
JOIN Scores s ON g.game_id = s.game_id&#13;
JOIN Teams t ON t.team_sym = s.team_sym_away&#13;
JOIN SecondHalfLines sr ON sr.game_id = g.game_id&#13;
JOIN BettingResults br ON br.game_id = g.game_id&#13;
GROUP BY g.season, t.team_name&#13;
ORDER BY g.season, percentage DESC</relation>
          <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query3' type='text'>SELECT &#13;
    g.season,&#13;
    g.playoffs AS game_type,&#13;
    ROUND(AVG(ABS(s.score_home - s.score_away)), 2) AS avg_point_differential&#13;
FROM Games g&#13;
JOIN Scores s ON g.game_id = s.game_id&#13;
GROUP BY g.season, g.playoffs&#13;
ORDER BY g.season, g.playoffs</relation>
          <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query4' type='text'><![CDATA[SELECT 
    t.team_name AS team,
    g.season,
    ROUND(SUM(
        CASE 
            WHEN (s.team_sym_home = t.team_sym AND ABS(s.score_home - s.score_away) <<= 5 AND s.score_home >> s.score_away) OR
                 (s.team_sym_away = t.team_sym AND ABS(s.score_away - s.score_home) <<= 5 AND s.score_away >> s.score_home)
            THEN 1
            ELSE 0
        END
    ) / NULLIF(COUNT(
        CASE 
            WHEN (s.team_sym_home = t.team_sym AND ABS(s.score_home - s.score_away) <<= 5) OR
                 (s.team_sym_away = t.team_sym AND ABS(s.score_away - s.score_home) <<= 5)
            THEN 1
        END
    ), 0) * 100, 2) AS close_game_win_rate
FROM Teams t
JOIN Scores s ON t.team_sym IN (s.team_sym_home, s.team_sym_away)
JOIN Games g ON s.game_id = g.game_id
WHERE g.regular = 'TRUE'  -- Restricting to regular season games
GROUP BY t.team_name, g.season
ORDER BY close_game_win_rate DESC]]></relation>
          <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query5' type='text'>SELECT &#13;
    g.season,&#13;
    (COUNT(CASE &#13;
               WHEN (s.score_home + s.score_away) = b.total &#13;
            THEN 1 END) / COUNT(*) * 100) AS percentage_matched_total&#13;
FROM BettingLines b&#13;
JOIN Games g ON b.game_id = g.game_id&#13;
JOIN Scores s ON s.game_id = g.game_id&#13;
GROUP BY g.season</relation>
          <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query6' type='text'>SELECT&#13;
	g.season,&#13;
    t.team_name,&#13;
    COUNT(*) AS games_covered_as_underdog&#13;
FROM BettingResults br&#13;
JOIN bettinglines bl on br.game_id = bl.game_id&#13;
JOIN Games g ON bl.game_id = g.game_id&#13;
JOIN Scores s ON s.game_id = g.game_id&#13;
JOIN Teams t ON t.team_sym = s.team_sym_away&#13;
WHERE br.id_spread = 0 AND bl.whos_favored = &apos;away&apos; AND g.regular = &apos;TRUE&apos;&#13;
GROUP BY g.season, t.team_name&#13;
ORDER BY g.season, games_covered_as_underdog DESC</relation>
          <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query7' type='text'>SELECT &#13;
    g.season,&#13;
    t.team_name,&#13;
    COUNT(CASE &#13;
               WHEN (br.id_spread = sh.H2_spread) &#13;
            THEN 1 END) / NULLIF(COUNT(*), 0) * 100 AS second_half_vs_full_game_difference&#13;
FROM BettingResults br&#13;
JOIN SecondHalfLines sh ON br.game_id = sh.game_id&#13;
JOIN Games g ON br.game_id = g.game_id&#13;
JOIN Scores s ON s.game_id = g.game_id&#13;
JOIN Teams t ON t.team_sym = s.team_sym_away&#13;
WHERE g.regular = &apos;TRUE&apos;&#13;
GROUP BY g.season, t.team_name</relation>
          <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query8' type='text'>SELECT &#13;
    g.season,&#13;
    g.regular AS game_type,&#13;
    t.team_name,&#13;
    AVG(s.score_home) AS avg_home_score,&#13;
    AVG(s.score_away) AS avg_away_score&#13;
FROM Scores s&#13;
JOIN Games g ON s.game_id = g.game_id&#13;
JOIN Teams t ON t.team_sym = s.team_sym_home&#13;
WHERE g.regular = &apos;FALSE&apos;&#13;
GROUP BY g.season, g.regular, t.team_name&#13;
HAVING AVG(s.score_home) != AVG(s.score_away)&#13;
ORDER BY g.season, game_type, team_name</relation>
        </relation>
        <cols>
          <map key='[avg_away_score]' value='[Custom SQL Query8].[avg_away_score]' />
          <map key='[avg_home_score]' value='[Custom SQL Query8].[avg_home_score]' />
          <map key='[avg_point_differential]' value='[Custom SQL Query3].[avg_point_differential]' />
          <map key='[avg_scoring_margin]' value='[Custom SQL Query].[avg_scoring_margin]' />
          <map key='[close_game_win_rate]' value='[Custom SQL Query4].[close_game_win_rate]' />
          <map key='[failed_to_cover]' value='[Custom SQL Query1].[failed_to_cover]' />
          <map key='[game_type (Custom SQL Query3)]' value='[Custom SQL Query3].[game_type]' />
          <map key='[game_type (Custom SQL Query8)]' value='[Custom SQL Query8].[game_type]' />
          <map key='[game_type]' value='[Custom SQL Query].[game_type]' />
          <map key='[games_covered_as_underdog]' value='[Custom SQL Query6].[games_covered_as_underdog]' />
          <map key='[percentage]' value='[Custom SQL Query2].[percentage]' />
          <map key='[percentage_favorite_failed]' value='[Custom SQL Query1].[percentage_favorite_failed]' />
          <map key='[percentage_matched_total]' value='[Custom SQL Query5].[percentage_matched_total]' />
          <map key='[season (Custom SQL Query1)]' value='[Custom SQL Query1].[season]' />
          <map key='[season (Custom SQL Query2)]' value='[Custom SQL Query2].[season]' />
          <map key='[season (Custom SQL Query3)]' value='[Custom SQL Query3].[season]' />
          <map key='[season (Custom SQL Query4)]' value='[Custom SQL Query4].[season]' />
          <map key='[season (Custom SQL Query5)]' value='[Custom SQL Query5].[season]' />
          <map key='[season (Custom SQL Query6)]' value='[Custom SQL Query6].[season]' />
          <map key='[season (Custom SQL Query7)]' value='[Custom SQL Query7].[season]' />
          <map key='[season (Custom SQL Query8)]' value='[Custom SQL Query8].[season]' />
          <map key='[season]' value='[Custom SQL Query].[season]' />
          <map key='[second_half_vs_full_game_difference]' value='[Custom SQL Query7].[second_half_vs_full_game_difference]' />
          <map key='[team]' value='[Custom SQL Query4].[team]' />
          <map key='[team_name (Custom SQL Query2)]' value='[Custom SQL Query2].[team_name]' />
          <map key='[team_name (Custom SQL Query6)]' value='[Custom SQL Query6].[team_name]' />
          <map key='[team_name (Custom SQL Query7)]' value='[Custom SQL Query7].[team_name]' />
          <map key='[team_name (Custom SQL Query8)]' value='[Custom SQL Query8].[team_name]' />
          <map key='[team_name]' value='[Custom SQL Query].[team_name]' />
          <map key='[total_games (Custom SQL Query2)]' value='[Custom SQL Query2].[total_games]' />
          <map key='[total_games]' value='[Custom SQL Query1].[total_games]' />
          <map key='[underdog_covered_H2_not_full]' value='[Custom SQL Query2].[underdog_covered_H2_not_full]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>18</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
            <object-id>[_A94F40D0062E4D6FB7AE983A59BF57F4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team_name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>team_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[_A94F40D0062E4D6FB7AE983A59BF57F4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[game_type]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>game_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[_A94F40D0062E4D6FB7AE983A59BF57F4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_scoring_margin</remote-name>
            <remote-type>131</remote-type>
            <local-name>[avg_scoring_margin]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>avg_scoring_margin</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>14</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[_A94F40D0062E4D6FB7AE983A59BF57F4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>18</remote-type>
            <local-name>[season (Custom SQL Query1)]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
            <object-id>[_958AD716991341B5918006BF9C96D3C3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>failed_to_cover</remote-name>
            <remote-type>20</remote-type>
            <local-name>[failed_to_cover]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>failed_to_cover</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[_958AD716991341B5918006BF9C96D3C3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_games</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_games]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>total_games</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[_958AD716991341B5918006BF9C96D3C3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_favorite_failed</remote-name>
            <remote-type>131</remote-type>
            <local-name>[percentage_favorite_failed]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>percentage_favorite_failed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>26</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[_958AD716991341B5918006BF9C96D3C3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>18</remote-type>
            <local-name>[season (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
            <object-id>[_A51192A7EE274B62B2595606D8E7D00A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team_name (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>team_name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[_A51192A7EE274B62B2595606D8E7D00A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>underdog_covered_H2_not_full</remote-name>
            <remote-type>20</remote-type>
            <local-name>[underdog_covered_H2_not_full]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>underdog_covered_H2_not_full</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[_A51192A7EE274B62B2595606D8E7D00A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_games</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_games (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>total_games</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[_A51192A7EE274B62B2595606D8E7D00A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage</remote-name>
            <remote-type>131</remote-type>
            <local-name>[percentage]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>percentage</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>26</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[_A51192A7EE274B62B2595606D8E7D00A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>18</remote-type>
            <local-name>[season (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
            <object-id>[_E5C1744E4FE34FD3B3F2E71104830FCF]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[game_type (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>game_type</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[_E5C1744E4FE34FD3B3F2E71104830FCF]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_point_differential</remote-name>
            <remote-type>131</remote-type>
            <local-name>[avg_point_differential]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>avg_point_differential</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>14</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[_E5C1744E4FE34FD3B3F2E71104830FCF]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>team</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[_1D2E5FBCF86A4897BB422A7FBF2E8202]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>18</remote-type>
            <local-name>[season (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
            <object-id>[_1D2E5FBCF86A4897BB422A7FBF2E8202]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>close_game_win_rate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[close_game_win_rate]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>close_game_win_rate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>29</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[_1D2E5FBCF86A4897BB422A7FBF2E8202]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>18</remote-type>
            <local-name>[season (Custom SQL Query5)]</local-name>
            <parent-name>[Custom SQL Query5]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
            <object-id>[_3B6AFA6188B14E8CAA9630F666A15A0E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_matched_total</remote-name>
            <remote-type>131</remote-type>
            <local-name>[percentage_matched_total]</local-name>
            <parent-name>[Custom SQL Query5]</parent-name>
            <remote-alias>percentage_matched_total</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>27</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[_3B6AFA6188B14E8CAA9630F666A15A0E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>18</remote-type>
            <local-name>[season (Custom SQL Query6)]</local-name>
            <parent-name>[Custom SQL Query6]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
            <object-id>[_03E6483D088A4B2A8D997F9F9F60FEB6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team_name (Custom SQL Query6)]</local-name>
            <parent-name>[Custom SQL Query6]</parent-name>
            <remote-alias>team_name</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[_03E6483D088A4B2A8D997F9F9F60FEB6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>games_covered_as_underdog</remote-name>
            <remote-type>20</remote-type>
            <local-name>[games_covered_as_underdog]</local-name>
            <parent-name>[Custom SQL Query6]</parent-name>
            <remote-alias>games_covered_as_underdog</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <object-id>[_03E6483D088A4B2A8D997F9F9F60FEB6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>18</remote-type>
            <local-name>[season (Custom SQL Query7)]</local-name>
            <parent-name>[Custom SQL Query7]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
            <object-id>[_9BC3B713991F4B2DA7188F4E4CFF7548]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team_name (Custom SQL Query7)]</local-name>
            <parent-name>[Custom SQL Query7]</parent-name>
            <remote-alias>team_name</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[_9BC3B713991F4B2DA7188F4E4CFF7548]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>second_half_vs_full_game_difference</remote-name>
            <remote-type>131</remote-type>
            <local-name>[second_half_vs_full_game_difference]</local-name>
            <parent-name>[Custom SQL Query7]</parent-name>
            <remote-alias>second_half_vs_full_game_difference</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>27</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[_9BC3B713991F4B2DA7188F4E4CFF7548]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>18</remote-type>
            <local-name>[season (Custom SQL Query8)]</local-name>
            <parent-name>[Custom SQL Query8]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_SMALLINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_USHORT&quot;</attribute>
            </attributes>
            <object-id>[_47421BF5578F4BE9BD6882E6C7EEEF3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[game_type (Custom SQL Query8)]</local-name>
            <parent-name>[Custom SQL Query8]</parent-name>
            <remote-alias>game_type</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[_47421BF5578F4BE9BD6882E6C7EEEF3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team_name (Custom SQL Query8)]</local-name>
            <parent-name>[Custom SQL Query8]</parent-name>
            <remote-alias>team_name</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[_47421BF5578F4BE9BD6882E6C7EEEF3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_home_score</remote-name>
            <remote-type>131</remote-type>
            <local-name>[avg_home_score]</local-name>
            <parent-name>[Custom SQL Query8]</parent-name>
            <remote-alias>avg_home_score</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>14</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[_47421BF5578F4BE9BD6882E6C7EEEF3F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_away_score</remote-name>
            <remote-type>131</remote-type>
            <local-name>[avg_away_score]</local-name>
            <parent-name>[Custom SQL Query8]</parent-name>
            <remote-alias>avg_away_score</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>14</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <object-id>[_47421BF5578F4BE9BD6882E6C7EEEF3F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Query 7' datatype='table' name='[__tableau_internal_object_id__].[_03E6483D088A4B2A8D997F9F9F60FEB6]' role='measure' type='quantitative' />
      <column caption='Query 5' datatype='table' name='[__tableau_internal_object_id__].[_1D2E5FBCF86A4897BB422A7FBF2E8202]' role='measure' type='quantitative' />
      <column caption='Query 6' datatype='table' name='[__tableau_internal_object_id__].[_3B6AFA6188B14E8CAA9630F666A15A0E]' role='measure' type='quantitative' />
      <column caption='Query 9' datatype='table' name='[__tableau_internal_object_id__].[_47421BF5578F4BE9BD6882E6C7EEEF3F]' role='measure' type='quantitative' />
      <column caption='Query 2' datatype='table' name='[__tableau_internal_object_id__].[_958AD716991341B5918006BF9C96D3C3]' role='measure' type='quantitative' />
      <column caption='Query 8' datatype='table' name='[__tableau_internal_object_id__].[_9BC3B713991F4B2DA7188F4E4CFF7548]' role='measure' type='quantitative' />
      <column caption='Query 3' datatype='table' name='[__tableau_internal_object_id__].[_A51192A7EE274B62B2595606D8E7D00A]' role='measure' type='quantitative' />
      <column caption='Query 1' datatype='table' name='[__tableau_internal_object_id__].[_A94F40D0062E4D6FB7AE983A59BF57F4]' role='measure' type='quantitative' />
      <column caption='Query 4' datatype='table' name='[__tableau_internal_object_id__].[_E5C1744E4FE34FD3B3F2E71104830FCF]' role='measure' type='quantitative' />
      <column datatype='string' name='[game_type (Custom SQL Query8)]' role='dimension' type='nominal' />
      <column-instance column='[game_type (Custom SQL Query8)]' derivation='None' name='[none:game_type (Custom SQL Query8):nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:game_type (Custom SQL Query8):nk]' type='palette'>
            <map to='#f28e2b'>
              <bucket>&quot;FALSE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Query 7' id='_03E6483D088A4B2A8D997F9F9F60FEB6'>
            <properties context=''>
              <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query6' type='text'>SELECT&#13;
	g.season,&#13;
    t.team_name,&#13;
    COUNT(*) AS games_covered_as_underdog&#13;
FROM BettingResults br&#13;
JOIN bettinglines bl on br.game_id = bl.game_id&#13;
JOIN Games g ON bl.game_id = g.game_id&#13;
JOIN Scores s ON s.game_id = g.game_id&#13;
JOIN Teams t ON t.team_sym = s.team_sym_away&#13;
WHERE br.id_spread = 0 AND bl.whos_favored = &apos;away&apos; AND g.regular = &apos;TRUE&apos;&#13;
GROUP BY g.season, t.team_name&#13;
ORDER BY g.season, games_covered_as_underdog DESC</relation>
            </properties>
          </object>
          <object caption='Query 5' id='_1D2E5FBCF86A4897BB422A7FBF2E8202'>
            <properties context=''>
              <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query4' type='text'><![CDATA[SELECT 
    t.team_name AS team,
    g.season,
    ROUND(SUM(
        CASE 
            WHEN (s.team_sym_home = t.team_sym AND ABS(s.score_home - s.score_away) <<= 5 AND s.score_home >> s.score_away) OR
                 (s.team_sym_away = t.team_sym AND ABS(s.score_away - s.score_home) <<= 5 AND s.score_away >> s.score_home)
            THEN 1
            ELSE 0
        END
    ) / NULLIF(COUNT(
        CASE 
            WHEN (s.team_sym_home = t.team_sym AND ABS(s.score_home - s.score_away) <<= 5) OR
                 (s.team_sym_away = t.team_sym AND ABS(s.score_away - s.score_home) <<= 5)
            THEN 1
        END
    ), 0) * 100, 2) AS close_game_win_rate
FROM Teams t
JOIN Scores s ON t.team_sym IN (s.team_sym_home, s.team_sym_away)
JOIN Games g ON s.game_id = g.game_id
WHERE g.regular = 'TRUE'  -- Restricting to regular season games
GROUP BY t.team_name, g.season
ORDER BY close_game_win_rate DESC]]></relation>
            </properties>
          </object>
          <object caption='Query 6' id='_3B6AFA6188B14E8CAA9630F666A15A0E'>
            <properties context=''>
              <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query5' type='text'>SELECT &#13;
    g.season,&#13;
    (COUNT(CASE &#13;
               WHEN (s.score_home + s.score_away) = b.total &#13;
            THEN 1 END) / COUNT(*) * 100) AS percentage_matched_total&#13;
FROM BettingLines b&#13;
JOIN Games g ON b.game_id = g.game_id&#13;
JOIN Scores s ON s.game_id = g.game_id&#13;
GROUP BY g.season</relation>
            </properties>
          </object>
          <object caption='Query 9' id='_47421BF5578F4BE9BD6882E6C7EEEF3F'>
            <properties context=''>
              <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query8' type='text'>SELECT &#13;
    g.season,&#13;
    g.regular AS game_type,&#13;
    t.team_name,&#13;
    AVG(s.score_home) AS avg_home_score,&#13;
    AVG(s.score_away) AS avg_away_score&#13;
FROM Scores s&#13;
JOIN Games g ON s.game_id = g.game_id&#13;
JOIN Teams t ON t.team_sym = s.team_sym_home&#13;
WHERE g.regular = &apos;FALSE&apos;&#13;
GROUP BY g.season, g.regular, t.team_name&#13;
HAVING AVG(s.score_home) != AVG(s.score_away)&#13;
ORDER BY g.season, game_type, team_name</relation>
            </properties>
          </object>
          <object caption='Query 2' id='_958AD716991341B5918006BF9C96D3C3'>
            <properties context=''>
              <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query1' type='text'><![CDATA[SELECT  g.season,
    COUNT(CASE 
            WHEN (br.id_spread = 0 AND bl.whos_favored = 'home' AND s.score_home << s.score_away) OR
                 (br.id_spread = 0 AND bl.whos_favored = 'away' AND s.score_away << s.score_home)
         THEN 1 
         END) AS failed_to_cover,
    COUNT(*) AS total_games,
    ROUND((COUNT(CASE 
            WHEN (br.id_spread = 0 AND bl.whos_favored = 'home' AND s.score_home << s.score_away) OR
                 (br.id_spread = 0 AND bl.whos_favored = 'away' AND s.score_away << s.score_home)
         THEN 1 
         END) / COUNT(*)) * 100, 2) AS percentage_favorite_failed
FROM BettingResults br
JOIN BettingLines bl ON br.game_id = bl.game_id
JOIN Games g ON bl.game_id = g.game_id
JOIN Scores s ON s.game_id = g.game_id
WHERE g.regular = 'TRUE'
GROUP BY g.season
ORDER BY g.season]]></relation>
            </properties>
          </object>
          <object caption='Query 8' id='_9BC3B713991F4B2DA7188F4E4CFF7548'>
            <properties context=''>
              <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query7' type='text'>SELECT &#13;
    g.season,&#13;
    t.team_name,&#13;
    COUNT(CASE &#13;
               WHEN (br.id_spread = sh.H2_spread) &#13;
            THEN 1 END) / NULLIF(COUNT(*), 0) * 100 AS second_half_vs_full_game_difference&#13;
FROM BettingResults br&#13;
JOIN SecondHalfLines sh ON br.game_id = sh.game_id&#13;
JOIN Games g ON br.game_id = g.game_id&#13;
JOIN Scores s ON s.game_id = g.game_id&#13;
JOIN Teams t ON t.team_sym = s.team_sym_away&#13;
WHERE g.regular = &apos;TRUE&apos;&#13;
GROUP BY g.season, t.team_name</relation>
            </properties>
          </object>
          <object caption='Query 3' id='_A51192A7EE274B62B2595606D8E7D00A'>
            <properties context=''>
              <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query2' type='text'>SELECT &#13;
    g.season,&#13;
    t.team_name,&#13;
    COUNT(CASE WHEN sr.H2_spread = 1 AND br.id_spread = 0 THEN 1 END) AS underdog_covered_H2_not_full,&#13;
    COUNT(*) AS total_games,&#13;
    ROUND((COUNT(CASE WHEN sr.H2_spread = 1 AND br.id_spread = 0 THEN 1 END) / COUNT(*)) * 100, 2) AS percentage&#13;
FROM Games g&#13;
JOIN Scores s ON g.game_id = s.game_id&#13;
JOIN Teams t ON t.team_sym = s.team_sym_away&#13;
JOIN SecondHalfLines sr ON sr.game_id = g.game_id&#13;
JOIN BettingResults br ON br.game_id = g.game_id&#13;
GROUP BY g.season, t.team_name&#13;
ORDER BY g.season, percentage DESC</relation>
            </properties>
          </object>
          <object caption='Query 1' id='_A94F40D0062E4D6FB7AE983A59BF57F4'>
            <properties context=''>
              <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query' type='text'>SELECT &#13;
    g.season,&#13;
    t.team_name,&#13;
    g.playoffs AS game_type,&#13;
    ROUND(AVG(s.score_home - s.score_away), 2) AS avg_scoring_margin&#13;
FROM Games g&#13;
JOIN Scores s ON g.game_id = s.game_id&#13;
JOIN Teams t ON t.team_sym IN (s.team_sym_home, s.team_sym_away)&#13;
GROUP BY g.season, g.playoffs, t.team_name&#13;
ORDER BY g.season, g.playoffs, avg_scoring_margin DESC</relation>
            </properties>
          </object>
          <object caption='Query 4' id='_E5C1744E4FE34FD3B3F2E71104830FCF'>
            <properties context=''>
              <relation connection='mysql.0ete8t30n0vphu1c8ma5j16s2ggl' name='Custom SQL Query3' type='text'>SELECT &#13;
    g.season,&#13;
    g.playoffs AS game_type,&#13;
    ROUND(AVG(ABS(s.score_home - s.score_away)), 2) AS avg_point_differential&#13;
FROM Games g&#13;
JOIN Scores s ON g.game_id = s.game_id&#13;
GROUP BY g.season, g.playoffs&#13;
ORDER BY g.season, g.playoffs</relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[season (Custom SQL Query5)]' />
              <expression op='[season (Custom SQL Query6)]' />
            </expression>
            <first-end-point object-id='_3B6AFA6188B14E8CAA9630F666A15A0E' />
            <second-end-point object-id='_03E6483D088A4B2A8D997F9F9F60FEB6' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[season (Custom SQL Query3)]' />
              <expression op='[season (Custom SQL Query4)]' />
            </expression>
            <first-end-point object-id='_E5C1744E4FE34FD3B3F2E71104830FCF' />
            <second-end-point object-id='_1D2E5FBCF86A4897BB422A7FBF2E8202' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[season (Custom SQL Query4)]' />
              <expression op='[season (Custom SQL Query5)]' />
            </expression>
            <first-end-point object-id='_1D2E5FBCF86A4897BB422A7FBF2E8202' />
            <second-end-point object-id='_3B6AFA6188B14E8CAA9630F666A15A0E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[team_name (Custom SQL Query7)]' />
              <expression op='[team_name (Custom SQL Query8)]' />
            </expression>
            <first-end-point object-id='_9BC3B713991F4B2DA7188F4E4CFF7548' />
            <second-end-point object-id='_47421BF5578F4BE9BD6882E6C7EEEF3F' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[season]' />
              <expression op='[season (Custom SQL Query1)]' />
            </expression>
            <first-end-point object-id='_A94F40D0062E4D6FB7AE983A59BF57F4' />
            <second-end-point object-id='_958AD716991341B5918006BF9C96D3C3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[season (Custom SQL Query6)]' />
              <expression op='[season (Custom SQL Query7)]' />
            </expression>
            <first-end-point object-id='_03E6483D088A4B2A8D997F9F9F60FEB6' />
            <second-end-point object-id='_9BC3B713991F4B2DA7188F4E4CFF7548' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[season (Custom SQL Query1)]' />
              <expression op='[season (Custom SQL Query2)]' />
            </expression>
            <first-end-point object-id='_958AD716991341B5918006BF9C96D3C3' />
            <second-end-point object-id='_A51192A7EE274B62B2595606D8E7D00A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[season (Custom SQL Query2)]' />
              <expression op='[season (Custom SQL Query3)]' />
            </expression>
            <first-end-point object-id='_A51192A7EE274B62B2595606D8E7D00A' />
            <second-end-point object-id='_E5C1744E4FE34FD3B3F2E71104830FCF' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visualization for Q1: highest average scoring margin </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (nba)' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' />
          </datasources>
          <datasource-dependencies datasource='federated.05wiivz09ijxxi1e5lotb1b5m4ww'>
            <column datatype='real' name='[avg_scoring_margin]' role='measure' type='quantitative' />
            <column datatype='string' name='[game_type]' role='dimension' type='nominal' />
            <column-instance column='[avg_scoring_margin]' derivation='None' name='[none:avg_scoring_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[game_type]' derivation='None' name='[none:game_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[team_name]' derivation='None' name='[none:team_name:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column datatype='string' name='[team_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:avg_scoring_margin:qk]' value='204' />
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:avg_scoring_margin:qk]' scope='rows' value='Avg Scoring Margin' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type:nk]' value='Playoffs?'>
              <formatted-text>
                <run>Playoffs?</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='888' />
                <format attr='maxwidth' value='888' />
                <format attr='minheight' value='108' />
                <format attr='maxheight' value='108' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name:nk] * [federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:avg_scoring_margin:qk])</rows>
        <cols>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season:qk]</cols>
      </table>
      <simple-id uuid='{97B6E5D4-6779-45D5-88AC-BB9B672035C3}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visualization for Q2: % of games resulting in favorite failing to cover</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (nba)' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' />
          </datasources>
          <datasource-dependencies datasource='federated.05wiivz09ijxxi1e5lotb1b5m4ww'>
            <column-instance column='[season (Custom SQL Query1)]' derivation='None' name='[none:season (Custom SQL Query1):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[percentage_favorite_failed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[season (Custom SQL Query1)]' role='measure' type='quantitative' />
            <column-instance column='[percentage_favorite_failed]' derivation='Sum' name='[sum:percentage_favorite_failed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query1):qk]' scope='cols' value='season' />
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:percentage_favorite_failed:qk]' scope='rows' value='% of games in which favorite failing to cover' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:percentage_favorite_failed:qk]</rows>
        <cols>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query1):qk]</cols>
      </table>
      <simple-id uuid='{6577693F-7603-49B6-B9BE-F637761BE776}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visualization for Q3: % of games where underdog covered the H2 spread but not full-game spread
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (nba)' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' />
          </datasources>
          <datasource-dependencies datasource='federated.05wiivz09ijxxi1e5lotb1b5m4ww'>
            <column-instance column='[season (Custom SQL Query2)]' derivation='None' name='[none:season (Custom SQL Query2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[team_name (Custom SQL Query2)]' derivation='None' name='[none:team_name (Custom SQL Query2):nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[percentage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[season (Custom SQL Query2)]' role='measure' type='quantitative' />
            <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[team_name (Custom SQL Query2)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query2):qk]' scope='cols' value='season' />
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:percentage:qk]' scope='rows' value='games %' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='80' />
                <format attr='maxheight' value='80' />
                <format attr='minwidth' value='1306' />
                <format attr='maxwidth' value='1306' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name (Custom SQL Query2):nk] * [federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:percentage:qk])</rows>
        <cols>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query2):qk]</cols>
      </table>
      <simple-id uuid='{33F1F0B5-BD1C-40B7-968C-33B3F24F3475}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visualization for Q4: avg point differential in games played during playoffs versus reg season
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (nba)' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' />
          </datasources>
          <datasource-dependencies datasource='federated.05wiivz09ijxxi1e5lotb1b5m4ww'>
            <column datatype='real' name='[avg_point_differential]' role='measure' type='quantitative' />
            <column datatype='string' name='[game_type (Custom SQL Query3)]' role='dimension' type='nominal' />
            <column-instance column='[game_type (Custom SQL Query3)]' derivation='None' name='[none:game_type (Custom SQL Query3):nk]' pivot='key' type='nominal' />
            <column-instance column='[season (Custom SQL Query3)]' derivation='None' name='[none:season (Custom SQL Query3):qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[season (Custom SQL Query3)]' role='measure' type='quantitative' />
            <column-instance column='[avg_point_differential]' derivation='Sum' name='[sum:avg_point_differential:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query3):qk]' scope='cols' value='season' />
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_point_differential:qk]' scope='rows' value='Avg Point Differential' />
            <format attr='height' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query3):qk]' value='89' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type (Custom SQL Query3):nk]' value='Playoffs?'>
              <formatted-text>
                <run>Playoffs?</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type (Custom SQL Query3):nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='416' />
                <format attr='maxheight' value='416' />
                <format attr='minwidth' value='1247' />
                <format attr='maxwidth' value='1247' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_point_differential:qk]</rows>
        <cols>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query3):qk]</cols>
      </table>
      <simple-id uuid='{0B958737-14C8-4245-87F9-62436469D9F4}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visualization for Q5: win rates in close games in regular season</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (nba)' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' />
          </datasources>
          <datasource-dependencies datasource='federated.05wiivz09ijxxi1e5lotb1b5m4ww'>
            <column datatype='real' name='[close_game_win_rate]' role='measure' type='quantitative' />
            <column-instance column='[season (Custom SQL Query4)]' derivation='None' name='[none:season (Custom SQL Query4):qk]' pivot='key' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[season (Custom SQL Query4)]' role='measure' type='quantitative' />
            <column-instance column='[close_game_win_rate]' derivation='Sum' name='[sum:close_game_win_rate:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[team]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:close_game_win_rate:qk]' scope='rows' value='Win %' />
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query4):qk]' scope='cols' value='season' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team:nk] * [federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:close_game_win_rate:qk])</rows>
        <cols>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query4):qk]</cols>
      </table>
      <simple-id uuid='{F8DA3B93-0E70-4326-92A1-FF219D120209}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visualization for Q6: % of games where the total score matched exactly with the line</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (nba)' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' />
          </datasources>
          <datasource-dependencies datasource='federated.05wiivz09ijxxi1e5lotb1b5m4ww'>
            <column-instance column='[season (Custom SQL Query5)]' derivation='None' name='[none:season (Custom SQL Query5):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[percentage_matched_total]' role='measure' type='quantitative' />
            <column datatype='integer' name='[season (Custom SQL Query5)]' role='measure' type='quantitative' />
            <column-instance column='[percentage_matched_total]' derivation='Sum' name='[sum:percentage_matched_total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query5):qk]' scope='cols' value='season' />
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:percentage_matched_total:qk]' scope='rows' value='% of games' />
            <format attr='height' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query5):qk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='532' />
                <format attr='maxheight' value='532' />
                <format attr='minwidth' value='1402' />
                <format attr='maxwidth' value='1402' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:percentage_matched_total:qk]</rows>
        <cols>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query5):qk]</cols>
      </table>
      <simple-id uuid='{B58D6B9A-BCA9-4C12-A16E-835977FA7E3E}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visualization for Q7: games per season in which underdog covered the spread</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (nba)' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' />
          </datasources>
          <datasource-dependencies datasource='federated.05wiivz09ijxxi1e5lotb1b5m4ww'>
            <column datatype='integer' name='[games_covered_as_underdog]' role='measure' type='quantitative' />
            <column-instance column='[season (Custom SQL Query6)]' derivation='None' name='[none:season (Custom SQL Query6):qk]' pivot='key' type='quantitative' />
            <column-instance column='[team_name (Custom SQL Query6)]' derivation='None' name='[none:team_name (Custom SQL Query6):nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[season (Custom SQL Query6)]' role='measure' type='quantitative' />
            <column-instance column='[games_covered_as_underdog]' derivation='Sum' name='[sum:games_covered_as_underdog:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[team_name (Custom SQL Query6)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:games_covered_as_underdog:qk]' scope='rows' value='# of games' />
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query6):qk]' scope='cols' value='season' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name (Custom SQL Query6):nk] * [federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:games_covered_as_underdog:qk])</rows>
        <cols>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query6):qk]</cols>
      </table>
      <simple-id uuid='{2C070B1A-AF49-4A46-A742-9FBB29FF507E}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visualization for Q8: % of games in which second half betting results differed from full game betting results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (nba)' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' />
          </datasources>
          <datasource-dependencies datasource='federated.05wiivz09ijxxi1e5lotb1b5m4ww'>
            <column-instance column='[season (Custom SQL Query7)]' derivation='None' name='[none:season (Custom SQL Query7):qk]' pivot='key' type='quantitative' />
            <column-instance column='[team_name (Custom SQL Query7)]' derivation='None' name='[none:team_name (Custom SQL Query7):nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[season (Custom SQL Query7)]' role='measure' type='quantitative' />
            <column datatype='real' name='[second_half_vs_full_game_difference]' role='measure' type='quantitative' />
            <column-instance column='[second_half_vs_full_game_difference]' derivation='Sum' name='[sum:second_half_vs_full_game_difference:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[team_name (Custom SQL Query7)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:second_half_vs_full_game_difference:qk]' scope='rows' value='% of games' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name (Custom SQL Query7):nk] * [federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:second_half_vs_full_game_difference:qk])</rows>
        <cols>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query7):qk]</cols>
      </table>
      <simple-id uuid='{C3257ADD-36EB-427B-9B50-A3C022403744}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visualization for Q9: difference in avg home scores vs away scores during the playoffs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (nba)' name='federated.05wiivz09ijxxi1e5lotb1b5m4ww' />
          </datasources>
          <datasource-dependencies datasource='federated.05wiivz09ijxxi1e5lotb1b5m4ww'>
            <column datatype='real' name='[avg_away_score]' role='measure' type='quantitative' />
            <column datatype='real' name='[avg_home_score]' role='measure' type='quantitative' />
            <column datatype='string' name='[game_type (Custom SQL Query8)]' role='dimension' type='nominal' />
            <column-instance column='[game_type (Custom SQL Query8)]' derivation='None' name='[none:game_type (Custom SQL Query8):nk]' pivot='key' type='nominal' />
            <column-instance column='[season (Custom SQL Query8)]' derivation='None' name='[none:season (Custom SQL Query8):qk]' pivot='key' type='quantitative' />
            <column-instance column='[team_name (Custom SQL Query8)]' derivation='None' name='[none:team_name (Custom SQL Query8):nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[season (Custom SQL Query8)]' role='measure' type='quantitative' />
            <column-instance column='[avg_away_score]' derivation='Sum' name='[sum:avg_away_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_home_score]' derivation='Sum' name='[sum:avg_home_score:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[team_name (Custom SQL Query8)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query8):qk]' scope='cols' value='season' />
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_away_score:qk]' scope='rows' value='Avg Away' />
            <format attr='title' class='0' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_home_score:qk]' scope='rows' value='Avg Home' />
            <format attr='width' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_away_score:qk]' value='84' />
            <format attr='width' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_home_score:qk]' value='84' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type (Custom SQL Query8):nk]' value='Playoffs?'>
              <formatted-text>
                <run>Playoffs?</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type (Custom SQL Query8):nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='116' />
                <format attr='maxheight' value='116' />
                <format attr='minwidth' value='1281' />
                <format attr='maxwidth' value='1281' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_away_score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type (Custom SQL Query8):nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_home_score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type (Custom SQL Query8):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name (Custom SQL Query8):nk] * ([federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_away_score:qk] + [federated.05wiivz09ijxxi1e5lotb1b5m4ww].[sum:avg_home_score:qk]))</rows>
        <cols>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:season (Custom SQL Query8):qk]</cols>
      </table>
      <simple-id uuid='{0DC28683-C225-44F6-9CC6-B876AE433F13}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{701F51EB-DD5D-499B-B4BA-D6C303780104}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type:nk]</field>
            <field>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98D6CBA2-4670-4D49-8B90-267D3484E4BC}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AA841801-D07D-4233-BB72-93FCF164BFD9}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name (Custom SQL Query2):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BEF57032-C9FC-4E32-9508-4EB9C4B99108}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type (Custom SQL Query3):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type (Custom SQL Query3):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{818F901E-BC13-44D2-8545-3902339C8B67}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CFA155E-DF0C-46FE-A4FA-98A1CECED9C7}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FBED72DE-EE3F-482E-B09B-F18655303D14}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name (Custom SQL Query6):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCF90676-E3E2-4AF9-9616-390E241613E4}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name (Custom SQL Query7):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{173D10D6-3575-4DF5-9C86-DD8E8B8128C3}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:game_type (Custom SQL Query8):nk]</field>
            <field>[federated.05wiivz09ijxxi1e5lotb1b5m4ww].[none:team_name (Custom SQL Query8):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09CFB932-FFFF-4D85-B499-1004A4787E80}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{43C17EA1-76A5-4A51-B6EA-124431C5FC6B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAARWUlEQVR4nO3dyXMc53nH8W93z/QMZoAZDDDYV5LgKlE2ZcmSFTm2aDl2Kl5SudgVH1I5
      OLnlX8gpruSYyiF/QKrsysGxk6rYTiplJ7JkWy7JC2maFAGSwjaYfd+nu98cSEIk2LA1xAAg
      u5/PhTUk8OIh2b95e3nfZzSllEIIn9KPuwAhjtNAAmDb9iCGeYjjODiOM/BxLct6KsY8rHH9
      XqtS6qHjVWYA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4WsSAOFrEgDhaxIA4Wt9BaCYS7OT
      LdBp1lhbW6PR7h1WXUIcicCH/1JFMBxha3WNYihAdGScsNnHtwvxBOrjCNawuy16tuLUyjm6
      1R1urec4tTiO4zgMelX1/fEGvSDOcZyBL7I6jDEPa1yplYeO1z4C4FAqVggNRaiX8uRyFeZP
      TmMYBsDur4MsEkDXB3uZYlkWgcBgZ67DGPOwxvV7rUopNE3bPV77GF3nxOkzu6+mpmcHWpgQ
      x0HuAglfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5P1zD6xlaty
      Yz2P4zjous6puQQnZhLHXdaxkwD4xG9uZ/nnf39n9/XXPntRAoAE4Im0tl2kWG3hODa6bnB+
      KclIJHTcZR0Z23bo2Q62ZWE5EDB0AsbhnK1LAJ5A33njBm9e3dh9/fd//RnOL00cY0VH60e/
      fJ9/+ref777+yuVn+PPXLx7Kz5IAiANZ2y5iWQ62Y2MYBucWk8ddUl8kAOJA/u5ffkyx2gJA
      A777ja8eb0F9ktugwtf6mgFazQY2OtGwSa3RYmQ4iqZph1XbE8+yHSr1NrZ9d/oPBgxiUf9c
      rHpBX21RatUKGxsp4olhApqi0ppjYTI20IJy5Qbf/r/ru7v2T8wk+PxLKwP9GYOyna/yN//4
      g93Xz5+e5m//8tPHV5DoW19tUcyggeUoLGWwsjLL2q0y9nh0oG1RSrUW3397bff1i+dmef1j
      ywce94e/uMN6prLbFeCLr5whGY8caEzbfrhli0INpI2HUg+Pa9sHbw+yt73MwFqO7Pl/H8SY
      h1brA+M9dluUobDJ6HCYK1dWWTr9zMDbohh72qBomjaQ1hjv3kzzs99u777+9KWTTI8fbFxj
      z71pjcHUqmkPj2sY+oHH3dteRtcPPiYAe06BBzHmYdX6D998694FuwJN4xtfv/z4bVFmZhcO
      XJAQR+nWdpFMqbH7Wim5CyR8TgIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8zTUASjlUqtWjrkWI
      I+ceAMfmO//6TX769tvUO4P9hBYhniSuAdB0g6mxKA4hHAb70UdCPEncZwC7R7tWJJfNUmra
      R12TEEfGfS2QZhCMTzG9tMTiaPCISxLi6Ox7CnTxwnl+8J1vkakN/lP6hHhS7HMR7HB7fZuv
      /MVfMTUi24aFd7k/B1A2rZ7DznvvsiMzgPCwfU+BhkyNUlsnPiTPyoR3uZ7fKMciMjrN6Xko
      Nmyio4P9EGwhnhSub++6YRKizY10m5mY3AUS3rXPbVCNhcVlhttgPLDns14pUGk5JGMh1rfS
      zC2eIBqWgIinl2sAHKvLz39xhbGQIhSfYGHUBKBjQTW7Q7EAI7FxwiG5QySebq5HsKYbDAUU
      2To8E/ng/L/TqBCdmGY2maBR3WHtTpaVpeRA26LYe1piKDWYViPOnvoc2z7wuNIWhaeqLcre
      I9S2bfcAbN++zup6mqnRKLW2w7BpAA6FYhlzSFHULbK5Cgsnzj41bVH0Pe07dMM48LjSFoWn
      qi3K3h6GhmG4B2BqcYUvfWmS0dEEpnn/HF/n4kef3/2ayanZAxckxHFzDUAgEOTqOz+h3Owx
      uXCaT378o3uDLoQn7LMUwsIJjnB+PkmlVqEtC0KFR+37HGB2LMytks0nnv8oYbnZIzzKNQCO
      3eXOZpbZiVGGoiOPXDwI4RXuC300A+w2GxsbdG3ZESa8yzUAV69eRdd1er3eI/fPhfAS1wC0
      ylnq3aMuRYij53p5O7N8llAkRcuCUECWQwvvcj264/EY+cw2165do9WVtijCu1wDEBuOYDdL
      TC+coSfXAMLDXAOQKxQ58+JlpseiTETlIYDwLteje2PtOr+5lWJ5cZ5WzyE4oIVuQjxpXAPw
      wh9c5tLL9mBWCwrxBNunK4TDj/7jW1y9/j6llnSFEN61b3foUj7NG2++SceSi2DhXftsibR4
      9pNfIGb0cOT4Fx7mOgPsbNzil7/8FTfTDSaG5TpAeJdrAIqNHvEw5HY2qLZkM4DwLtcAXLz4
      LHooxh997nPEhz64Bdptt6jWGyjHplKpDmwjvBDHxb01oqYTCTj8+M23aD6wFKJQLHD7xnus
      3lqlVEixma0dWaFCHAb31ojKod7uEVCKluUQ4+4sENAUwxOTqG6LpeVZ1m6XsZNRaYtyj7RF
      8UhbFE3TiYRN6m0YCt6fJBw2t1JEY0kS8SGuXF1l+fQz0hblAdIWxSNtUZS6+8XR2MgDrRF1
      nn/xpd2vmZyeP3BBQhy3fa4B7v7aaTWx5UGA8DD3eUUpKrktcr0R2RMsPM11Buh2O0zPzWMo
      h54EQHiY6wzw4x/+F9vFJqdPLzNsypZI4V2uAXjtc1+kUKqQGI0TkD3BwsP26QxncPPqO3zv
      e9+j3JI9wcK7XGeAYnaHpmNy6dIFIqb0hRPe5ToDlIsFrG6H1eu/pd6RGUB4l2sATpw+h4Yi
      rDt05C6Q8DDXU6B2p8eFsycpt5CuEMLTXGeA7e0t3r99m631WzTkFEh4mGsATp08QS5fOOpa
      hDhyruc37/7sDeodB73TeWQJqRBe4joDvPDKp1memwDHlvbowtP2aYsCqc11gsNjRGQphPCw
      fZZDa8wtLFIvpmlId2jhYe73ODWdVy9/fmC7vIR4UrkHwLH4z+9+G0szee3zXyYRkSAIb9rn
      GkBRKpXQ9uz3tHsdqvUWnUaVGzduUG/1jqRIIQ6L6wyQzRV4+ZVX6doQCnwQgsz2BmXLRG+X
      CccniMgHCIun3D5dITR0XUdXD++kn5qdo76V59S5Z2hW06zeybKylJS2KPdIWxSPtEWZnJok
      YJps3L6FYdyPgGJ7c5NKuUk2HKBQLLF48qy0RXmAtEXxSlsUq8db//Nduk6M0ZPPcWIsBGgs
      njrL4r2vmZmdPXBBQhw391OgQJBQcIhTF15gckTO84V3ud8Fsns0K1lura2Rq0t3aOFd7k+C
      DZOxmUVyhRwTEZkBhHe5XwPYPToM8cmXn8GQpUDCw/Y9vBu1Kvl8HkuWAgkPcw+AphPQbNLp
      tHSGE562z4MwMJwO+bYm+wGEp7nfBXIcxsbH6LXatG05BxLete9+gEyhTiSs8c5Pf4KcBQmv
      cr8LBDhagNGITiBk0nNAtgYIL3INgG4E+eKX/5SerQiZQTS5FSo8yvXQfu/6Nda3UgQDBpqm
      PbKISAivcA2A4XR4843/5fs/+G/pDSo8zTUAJ89dJJkYxVQdGj0JgPCu/T8oeyhIV5lEQ3IB
      ILzL/UGYbvDaZ//kqGsR4si57wnOZrlx5R1KpRov/fGfMT0cPOq6hDgS7k+CO1V2ciW0+DRJ
      WQ4tPMw1AFeuXEWzbaanxmg90BnOsS063R7KsSmVKwPbCC/EcXF9e3/plVfJVdqcXF546BnA
      zsYtylaYCC2MgEato7E4FTuiUoUYPNcAxBITxBKP/v703AKNrTyWbbC8NMva7TJ2MiptUe6R
      tigeaYuy37dvb2xQKNQ4sTDD1atrLJ25IG1RHiBtUTzSFmW/b19cOcfiyt1X07PzBy5IiOMm
      T7mEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kA
      hK9JAISvSQCEr0kAhK9JAISvPVYAlFID3QgvxHF5rJ3Gd1Zv0FU680snGQ5L1zjx9HqsAIyP
      j7OV2qJQqjM0GZO2KPdIWxRPt0X5QM/qodAwgwFpi/IAaYvi6bYoH0hOzZGcmjtwQUIcN7kL
      JHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8
      TQIgfE0CIHztsQJQSG/x61//inKzN+h6hDhSjxWAYq3Fc8+dJpfKDroeIY7UYwUggM37tzcI
      j4wMuh4hjtRj7QlePnWaWr3JyMjwoOsR4kg9VgA03SAWu/vub9v2I20sDmJsJMzXv3Bpt93G
      5Ngwtm0feNzXP3aCiycnUUqhaRrjsfCBx41HQnz9C5d2x5yIRwZS6+Xnlzi/ND7Qcc8ujj1U
      65n5sYHU+rXXn6XdtXbHHcSYp+cTD9W6MjeYWr96+QLNTg+l7nYbQTloagANfWzbHlhblPvu
      h2pvi4yDOoxaD2PMwxrX77UqpVBK7R5XAwmAEE+rgb29Nmpl0rkiyu6xvZNBKUU+s0O722N7
      c4P31zf5XZOYY3XZ2NzCvv99PZtmrUyxXMPutdncSj3S3e33U5QLOYrlGr1Ok0yuiFIO6Z0U
      lqMo5jLUmp2+/67tZo1UOodybHZ2drCVot2s07UcOs06uUK57zFBkUlt0Wh3qVdLlKoNlFLU
      anUA6vXaY/z9odOsk0pnP6jVUXRadTr3ak2ls3ubu324Wne2qLe6NKolSpX6vVprKMdia2OD
      Rrvbd63VUp58qYrVbZHO5gGo1Wr3fqRNqVzte0zH7rG1uUXPdijmMndPgRyLeqNFr9Mc3AyQ
      z+XIpFLo4SDJeJRcvokZi9Np1Fg5ucTqzTUuXHx238RVSgUcq8HGVoXo+DidRgVshaYcbM1h
      eixKxRljZT7xoWtSSpHP5Uin0wQCBpFQgFbHZnh8nFohg2PEsdoVLn7kub7eCQr5HMVsBkvX
      GU3EqTcV3eL7JE59nPL2KkFdY27lLJHgh5++e+0G1VaP1PYmGgY6iunZCdbu7PDCc2d46+1f
      8NLLn8AM9PeeVcjnKeczdJVGfGyUesPGKa8TXf44EadCOZ8luXSG+NCH7/FqdZpUml1S25vo
      GGg4TM9OsXp7mxeeO0et1WJ9Y4ePXLzQV625bJb0TpqAaRCLmBBOcPO9m7z2h6+wdWeNnXKL
      Fy9d7GvMWqWEZbXY3C4Sio5gdVqMxyPkKi1ipj24GaDXrjOcnCagB0lOjFMvVxkdG8MM6GhW
      m0g8+Tt/WNDQSBXazEzEGB0fxwwozFCEkXCIQNgkU6wRDuxtbvf7NapFJmYXCQRNEvEY9UaH
      8eQ4RiCM3qtRrTUf6Rn5+6heBz06StgIkkyOg+0wPzsDKIJmiHhkiG6fNwYCpklme5Plk0uE
      QsNEQybRsUli0RB6cIjZqWSfVd5jd1DhGEPBIMlkEs2xmZ+bufdnXVQ4Rizc370QIxgkm9pi
      6cQSZijKcChEZGyC+HAYwwxTzmUIhsJ9l9qqlxmfmScQMBlLxFEEmJkcw+k2uLWRplTIYdn9
      /buaAYNUpsr8zBgj8QRm0GBqZo6goTG7eGpQAXDI5Yu063XGEyNcvXaH85eeJXPnJkMjCcrV
      JgvzU79zhEw2i46DORwnc/s9hkYmMfUuNaWTGBpC1wOEh8z+ylI98sUajXqNkYjJeqbM+XMn
      WL32W0YnZjBNnYXlZfq7zFJkczl6rRaJ5CjXr91kLDnKVrpAPpsmYupkmz1iZn8HVaOYpe0Y
      1GpdAjRpa0Hq2RTlcplsLkexVCaVzvU1JkA2m8NqtxgdT3Dj2g0SyTE2d4oUsqndP+s6/b0F
      NMt5mpZGrdYhqLVpEqCZ26FcLpNOp2n2FOFQqM9KLXL5Ms16jfhwmLWNHLEhjXK5TKrY5FOf
      epVnL5wjYPR3yOayGdAUKhChklnHjMRIba5TLpcoFIpyESz8TRbDCV+TAAhfkwAIX5MACF+T
      AAhfkwAIX5MACF+TAAhf+39BhVFSQrkGtgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      qskASFXt/wOECPVK8Dp0fgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      HTAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      hXOxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      nGv+Pz5emvEurG2eAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
